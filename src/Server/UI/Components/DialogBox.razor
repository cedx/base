@namespace Belin.Base.UI.Components

<dialog-box caption="@Caption" centered="@Centered" fade="@Fade" modal="@Modal" open="@Open">
	<div class="modal @(Fade ? "fade" : string.Empty)" data-bs-backdrop="@(Modal ? "static" : "true")" tabindex="-1">
		<div class="modal-dialog @(Centered ? "modal-dialog-centered" : string.Empty) @(Scrollable ? "modal-dialog-scrollable" : string.Empty)">
			<div class="modal-content">
				<div class="modal-header">
					<h1 class="modal-title">@Caption</h1>
					<button class="btn-close" type="button"></button>
				</div>
				<div class="modal-body">
					@Body
				</div>
				<div class="d-flex gap-2">
					<i class="icon text-@Context.ToCss()">@Context.GetIcon()</i>
					<div class="flex-grow-1">@Body</div>
				</div>
				<div class="modal-footer" hidden="@(Footer is null)">
					@Footer
				</div>
			</div>
		</div>
	</div>

	<template>
		<DialogButton />
	</template>
</dialog-box>

@code {
	/// <summary>
	/// The child content displayed in the body.
	/// </summary>
	[Parameter]
	public RenderFragment? Body { get; set; }

	/// <summary>
	/// The title displayed in the header.
	/// </summary>
	[Parameter]
	public string Caption { get; set => field = value.Trim(); } = string.Empty;

	/// <summary>
	/// Value indicating whether to vertically center this dialog box.
	/// </summary>
	[Parameter]
	public bool Centered { get; set; }

	/// <summary>
	/// The child content.
	/// </summary>
	[Parameter]
	public RenderFragment? ChildContent { get => Body; set => Body = value; }

	/// <summary>
	/// Value indicating whether to apply a transition.
	/// </summary>
	[Parameter]
	public bool Fade { get; set; }

	/// <summary>
	/// The child content displayed in the footer.
	/// </summary>
	[Parameter]
	public RenderFragment? Footer { get; set; }

	/// <summary>
	/// Value indicating whether to this dialog box will not close when clicking outside of it.
	/// </summary>
	[Parameter]
	public bool Modal { get; set; }

	/// <summary>
	/// Value indicating whether to initially show this component.
	/// </summary>
	[Parameter]
	public bool Open { get; set; }

	/// <summary>
	/// Value indicating whether the body is scrollable.
	/// </summary>
	[Parameter]
	public bool Scrollable { get; set; }
}
