@namespace Belin.Base.UI.Components

<theme-dropdown alignment="@Alignment" appTheme="@AppTheme" label="@Label" storageKey="@StorageKey">
	<li class="nav-item dropdown">
		<a class="dropdown-toggle nav-link" data-bs-toggle="dropdown" href="#">
			<i class="icon icon-fill me-1">@AppTheme.GetIcon()</i>
			<span class="mx-1" hidden="@(Label.Length > 0)">@Label</span>
		</a>
		<ul class="dropdown-menu @(Alignment == MenuAlignment.End ? "dropdown-menu-end" : string.Empty)">
			@foreach (var theme in Enum.GetValues<AppTheme>()) {
				<li>
					<button class="dropdown-item d-flex align-items-center justify-content-between" data-theme="@theme">
						<span><i class="icon icon-fill me-1">@theme.GetIcon()</i> @theme.GetLabel()</span>
						@if (theme == AppTheme) { <i class="icon ms-3">check</i> }
					</button>
				</li>
			}
		</ul>
	</li>
</theme-dropdown>

@code {
	// The alignment of the dropdown menu.
	[Parameter]
	public MenuAlignment Alignment { get; set; } = MenuAlignment.End;

	// The current application theme.
	[Parameter]
	public AppTheme AppTheme { get; set; } = AppTheme.System;

	// The label of the dropdown menu.
	[Parameter]
	public string Label { get; set; } = "Th√®me";

	// The key of the storage entry providing the saved application theme.
	[Parameter]
	public string StorageKey { get; set; } = "AppTheme";
}
